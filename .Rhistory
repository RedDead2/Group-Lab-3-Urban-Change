china_tibble = as_tibble(china_data)
library(dplyr)
china_province = china_tibble[c("Year", "Beijing_Output", "Shanghai_Output")]
print(china_province)
china_ratio = china_prinvince %>%
filter(Year <= 2017) %>%
mutate(Output_Ratio = Beijing_Output / Shanghai_Output)
my_function = function(a, b) {
mutate(Output_Ratio = a / b)
}
my_function(china_province$Beijing_Output, china_province$Shanghai_Output)
my_function = function(a, b, c) {
a %>%
mutate(Output_Ratio = b / c)
}
my_function(china_province$Beijing_Output, china_province$Shanghai_Output)
my_function = function(a, b, c) {
a %>%
mutate(Output_Ratio = b / c)
}
my_function(china_province$Beijing_Output, china_province$Shanghai_Output)
my_function = function(a, b, c) {
a %>%
filter(a != "NA") %>%
filter(b != "NA") %>%
mutate(Output_Ratio = b / c)
}
my_function(china_province$Beijing_Output, china_province$Shanghai_Output)
my_function(china_province$Beijing_Output, china_province$Shanghai_Output)
my_function = function(a, b, c) {
a %>%
filter(b != "NA") %>%
filter(c != "NA") %>%
mutate(Output_Ratio = b / c)
}
my_function(china_province$Beijing_Output, china_province$Shanghai_Output)
my_function = function(a, b, c) {
a %>%
filter(b != "NA") %>%
filter(c != "NA") %>%
mutate(Output_Ratio = b / c)
}
my_function = function(a, b, c) {
a %>%
filter(b != "NA") %>%
filter(c != "NA") %>%
mutate(Output_Ratio = b / c)
}
my_function(china_province$Beijing_Output, china_province$Shanghai_Output)
my_function = function(a, b, c) {
a %>%
filter_(b != "NA") %>%
filter_(c != "NA") %>%
mutate(Output_Ratio = b / c)
}
my_function(china_province$Beijing_Output, china_province$Shanghai_Output)
six_to_ten = seq(6:10)
six_to_ten
six_to_ten = c(6:10)
six_to_ten
sum_vectors = six_to_ten + five
sum_vectors = six_to_ten + five
five = c(1:5)
seq
five = seq(1:5)
six_to_ten = c(6:10)
sum_vectors = six_to_ten + five
sum_vectors
product = five * six_to_ten
product
full_seq = c(five, six_to_ten)
full_seq
full_seq = c(five, six_to_ten)
my_matrix = rbind(five, six_to_ten, product)
my_matrix
matrix_frame = as.data.frame((my_matrix))
matrix_frame
View(matrix_frame)
library(dplyr)
china_city = desc(china_tibble[c("Year", "Beijing_Output", "Shanghai_Output")])
china_city = desc(china_tibble[c("Year", "Beijing_Output", "Shanghai_Output")])
china_tibble = desc(as_tibble(china_data))
china_data = read.csv("China_EO_49to17.csv")
china_tibble = desc(as_tibble(china_data))
desc_china_tib = arrange(china_tibble, desc(Year))
View(desc_china_tib)
desc_china_tib = arrange(china_tibble, desc(Year))
china_province = desc_china_tib[c("Year", "Beijing_Output", "Shanghai_Output")]
print(china_province)
china_ratio = china_province %>%
filter(Year <= 2017) %>%
mutate(Output_Ratio = Beijing_Output / Shanghai_Output)
library(tidyverse)
china_data = read.csv("China_EO_49to17.csv")
china_tibble = as_tibble(china_data)
desc_china_tib = arrange(china_tibble, desc(Year))
china_province = desc_china_tib[c("Year", "Beijing_Output", "Shanghai_Output")]
china_province
china_ratio = china_province %>%
filter(Year <= 2017) %>%
mutate(Output_Ratio = Beijing_Output / Shanghai_Output)
knitr::opts_chunk$set(echo = TRUE)
##More Equations
100/10+2
100/(10+2)
##Algebra
x <- 8 * 3
x + 10
a = x - 7
b = 3 + a
((12 + a) - 3) / 2
a * b / 34 + 6
b * 40 / ((a + 3) - 12)
##Vectors
v = seq(1:30)
name = c("Kat", "Tim", "Dina", "Wayne")
length(v)
length(name)
sum(v)
"sum(name), will not work due to invalid type of values in the 'name' vector
which contains all string values."
five = seq(1:5)
six_to_ten = c(6:10)
sum_vectors = six_to_ten + five
print(sum_vectors)
product = five * six_to_ten
print(product)
full_seq = c(five, six_to_ten)
my_matrix = rbind(five, six_to_ten, product)
matrix_frame = as.data.frame((my_matrix))
#Loading the Data
This is how to load data into R and how to convert it.
##More Equations
100/10+2
100/(10+2)
##Algebra
x <- 8 * 3
x + 10
a = x - 7
b = 3 + a
((12 + a) - 3) / 2
a * b / 34 + 6
b * 40 / ((a + 3) - 12)
##Vectors
v = seq(1:30)
name = c("Kat", "Tim", "Dina", "Wayne")
length(v)
length(name)
sum(v)
"sum(name), will not work due to invalid type of values in the 'name' vector
which contains all string values."
five = seq(1:5)
six_to_ten = c(6:10)
sum_vectors = six_to_ten + five
print(sum_vectors)
product = five * six_to_ten
print(product)
full_seq = c(five, six_to_ten)
my_matrix = rbind(five, six_to_ten, product)
matrix_frame = as.data.frame((my_matrix))
#Loading the Data
This is how to load data into R and how to convert it.
knitr::opts_chunk$set(echo = TRUE)
```{r A bar plot of the employed population in Shanghai}
desc_china_tib$Year = c(1949:2017)
library(tidyverse)
library(tidyverse)
china_data = read.csv("China_EO_49to17.csv")
china_tibble = as_tibble(china_data)
desc_china_tib = arrange(china_tibble, desc(Year))
desc_china_tib$Year = c(1949:2017)
recent_china = desc_china_tib %>%
select(Year,Shanghai_Enterprise)
# Visualized the data into a point plot
library(ggplot2)
ggplot(data = recent_china) +
geom_point(mapping = aes(x = Year, y = Beijing_Enterprise)) +
labs(title = "Number of Beijing Enterprises",
x = "Year",
y = "Beijing Enterprises")
# Visualized the data into a point plot
library(ggplot2)
ggplot(data = recent_china) +
geom_point(mapping = aes(x = Year, y = Beijing_Enterprise)) +
labs(title = "Number of Beijing Enterprises",
x = "Year",
y = "Beijing Enterprises")
library(tidyverse)
china_data = read.csv("China_EO_49to17.csv")
desc_china_tib = arrange(china_tibble, desc(Year))
recent_china = desc_china_tib %>%
select(Year,Shanghai_Enterprise)
ggplot(data = recent_china) +
geom_point(mapping = aes(x = Year, y = Shanghai_Enterprise)) +
labs(title = "Number of Beijing Enterprises",
x = "Year",
y = "Beijing Enterprises")
```{r A bar plot of the employed population in Shanghai}
china_data = read.csv("China_EO_49to17.csv")
desc_china_tib$Year = c(1949:2017)
ggplot(data = recent_china) +
geom_point(mapping = aes(x = Year, y = Shanghai_Enterprise)) +
labs(title = "Number of Beijing Enterprises",
x = "Year",
y = "Shanghai Enterprises")
shanghai <- as.data.frame(shanghai)
#Rename the column names
names(shanghai) <- c("Year", "Total_Number_of_Employed_Persons_by_10000",
"Employed_Persons_in_UrbanAreas_by_10000",
"Employed_Persons_in_RuralAreas_by_10000",
"Employed_Persons_in_Primary_Industry_by_10000",
"Employed_Persons_in_Secondary_Industry_by_10000",
"Employed_Persons_by_Tertiary_Industry_by_10000",
"Staffand_Workers_by_10000",
"Staffand_Workers_State_owned_Units_by_10000",
"Staffand_Workers_Urban_Collective_Owned_Units_by_10000",
"Staffand_Workers_Other_Ownership_Units_by_10000")
#Delete the first 4 rows with the column names as values(nothing else).
n <- 4
library(stringr)
#read csv
shanghai <- read.csv("ShanghaiData.csv")
shanghai <- as.data.frame(shanghai)
#Rename the column names
names(shanghai) <- c("Year", "Total_Number_of_Employed_Persons_by_10000",
"Employed_Persons_in_UrbanAreas_by_10000",
"Employed_Persons_in_RuralAreas_by_10000",
"Employed_Persons_in_Primary_Industry_by_10000",
"Employed_Persons_in_Secondary_Industry_by_10000",
"Employed_Persons_by_Tertiary_Industry_by_10000",
"Staffand_Workers_by_10000",
"Staffand_Workers_State_owned_Units_by_10000",
"Staffand_Workers_Urban_Collective_Owned_Units_by_10000",
"Staffand_Workers_Other_Ownership_Units_by_10000")
#Delete the first 4 rows with the column names as values(nothing else).
n <- 4
shanghai_rows <- shanghai[-(1:n), , drop = FALSE]
#Delate the last 2 rows with the column names as values(nothing else).
shanghai_rows2 <- head(shanghai_rows, -2)
#Taking data from 2004 to 2013(most recent available data)
shanghai_data <- shanghai_rows2 %>%
filter(Year > 2003)
ggplot(shanghai_data) +
geom_bar(mapping = aes(x = Year, y = Total_Number_of_Employed_Persons_by_10000), stat = "identity") +
labs(title = "Total Population of the Employed in Shanghai",
x = "Year",
y = "Total Population(By 10000 persons)") +
coord_flip()
#Taking data from 2004 to 2013(most recent available data)
shanghai_data <- shanghai_rows2 %>%
filter(Year > 2003)
"Here is a plot of the total employed population in Shanghai. We chose to add this data, to help "
ggplot(shanghai_data) +
geom_bar(mapping = aes(x = Year, y = Total_Number_of_Employed_Persons_by_10000), stat = "identity") +
labs(title = "Total Population of the Employed in Shanghai",
x = "Year",
y = "Total Population(By 10000 persons)") +
coord_flip()
recent_Shanghai <- left_join(shanghai_data, recent_china)
library(tidyverse)
china_tibble = as_tibble(china_data)
desc_china_tib = arrange(china_tibble, desc(Year))
desc_china_tib$Year = c(1949:2017)
recent_china = desc_china_tib %>%
select(Year,Shanghai_Enterprise,
Shanghai_Output)
# Visualized the data into a point plot
library(ggplot2)
ggplot(data = recent_china) +
geom_point(mapping = aes(x = Year, y = Shanghai_Enterprise)) +
labs(title = "Number of Beijing Enterprises",
x = "Year",
y = "Shanghai Enterprises")
#read csv
shanghai <- read.csv("ShanghaiData.csv")
#Rename the column names
names(shanghai) <- c("Year", "Total_Number_of_Employed_Persons_by_10000",
"Employed_Persons_in_UrbanAreas_by_10000",
"Employed_Persons_in_RuralAreas_by_10000",
"Employed_Persons_in_Primary_Industry_by_10000",
"Employed_Persons_in_Secondary_Industry_by_10000",
"Employed_Persons_by_Tertiary_Industry_by_10000",
"Staffand_Workers_by_10000",
"Staffand_Workers_State_owned_Units_by_10000",
"Staffand_Workers_Urban_Collective_Owned_Units_by_10000",
"Staffand_Workers_Other_Ownership_Units_by_10000")
#Delete the first 4 rows with the column names as values(nothing else).
n <- 4
shanghai_rows <- shanghai[-(1:n), , drop = FALSE]
#Convert the Year column from string to numeric by inputting a numeric
#vector with a sequence from 1949 to 2013
shanghai_rows2$Year <- c(1949:2013)
ggplot(shanghai_data) +
geom_bar(mapping = aes(x = Year, y = Total_Number_of_Employed_Persons_by_10000), stat = "identity") +
labs(title = "Total Population of the Employed in Shanghai",
x = "Year",
y = "Total Population(By 10000 persons)") +
coord_flip()
recent_Shanghai <- left_join(shanghai_data, recent_china)
View(shanghai_data)
shanghai_data
library(tidyverse)
china_data = read.csv("China_EO_49to17.csv")
desc_china_tib = arrange(china_tibble, desc(Year))
recent_china = desc_china_tib %>%
select(Year,Shanghai_Enterprise,
Shanghai_Output)
recent_china = desc_china_tib %>%
select(Year,Shanghai_Enterprise,
Shanghai_Output)
# Visualized the data into a point plot
library(ggplot2)
library(stringr)
#read csv
shanghai <- read.csv("ShanghaiData.csv")
shanghai <- as.data.frame(shanghai)
#Rename the column names
names(shanghai) <- c("Year", "Total_Number_of_Employed_Persons_by_10000",
"Employed_Persons_in_UrbanAreas_by_10000",
"Employed_Persons_in_RuralAreas_by_10000",
"Employed_Persons_in_Primary_Industry_by_10000",
"Employed_Persons_in_Secondary_Industry_by_10000",
"Employed_Persons_by_Tertiary_Industry_by_10000",
"Staffand_Workers_by_10000",
"Staffand_Workers_State_owned_Units_by_10000",
"Staffand_Workers_Urban_Collective_Owned_Units_by_10000",
"Staffand_Workers_Other_Ownership_Units_by_10000")
#Delete the first 4 rows with the column names as values(nothing else).
n <- 4
shanghai_rows <- shanghai[-(1:n), , drop = FALSE]
#Delate the last 2 rows with the column names as values(nothing else).
shanghai_rows2 <- head(shanghai_rows, -2)
#Convert the Year column from string to numeric by inputting a numeric
#vector with a sequence from 1949 to 2013
shanghai_rows2$Year <- c(1949:2013)
#Taking data from 2004 to 2013(most recent available data)
shanghai_data <- shanghai_rows2 %>%
filter(Year > 2003)
ggplot(shanghai_data) +
geom_bar(mapping = aes(x = Year, y = Total_Number_of_Employed_Persons_by_10000), stat = "identity") +
labs(title = "Total Population of the Employed in Shanghai",
x = "Year",
y = "Total Population(By 10000 persons)") +
coord_flip()
View(shanghai_data)
library(installr)
updateR()
intstall("tigeris")
intstall("tigris")
library(tigris)
intstall("tigris")
install("tigris")
install.packages("tigris")
library(graphics)
library(stringi)
library(tigris)
options(class = "sf")
options(tigris_use_cache = TRUE)
wa <- rbind_tigris(tracts("WA", cb = TRUE))
View(wa)
ggplot(orwa) + geom_sf()
library(ggplot2)
ggplot(orwa) + geom_sf()
ggplot(wa) + geom_sf()
cb <- core_based_statistical_areas(cb = TRUE)
pdx <- filter(cb, grepl("Tacoma", NAME))
ggplot(pdx) + geom_sf()
pdx <- filter(cb, grepl("Tacoma", NAME))
tacoma_zips <- zctas(state = "WA", starts_with = "984", year = "2018")
tacoma <- filter_place("WA", "Tacoma")
tacoma <- places("Washington") %>%
filter_place("Tacoma")
View(tacoma)
plot(tacoma)
options("load_tiger")
options("refresh")
options("tigris_refresh")
blocks(tacoma)
install.packages("purrr")
install.packages("purrr")
install.packages("tidycensus")
library(tidycensus)
library(purrr)
View(tacoma)
pierce_blocks <- blocks(state = "WA", county = "Pierce", year = "2017")
library(graphics)
library(stringi)
library(tigris)
library(ggplot2)
library(tidycensus)
library(purrr)
library(tidyverse)
library(acs)
library(XML)
library(stringr)
options(class = "sf")
options(tigris_use_cache = TRUE)
options(error=recover)
pierce_blocks <- blocks(state = "WA", county = "Pierce", year = "2017")
View(tacoma)
View(pierce_blocks)
tacoma <- places("Washington", year = 2017) %>%
filter_place("Tacoma")
View(tacoma)
tacoma <- places("Washington", county = "Pierce", year = 2017) %>%
filter_place("Tacoma")
View(pierce_blocks)
View(pierce_blocks)
tacoma_pierce_blocks <- geo_join(tacoma, pierce_blocks, S4, STATEFP, by = NULL, how = "left")
0
tacoma_pierce_blocks <- geo_join(tacoma, pierce_blocks, NULL, STATEFP, by = NULL, how = "left")
---
title: "MoransI"
author: "Alberto Melendez"
date: "February 4, 2019"
output: html_document
---
```{r}
library(tidyverse)
library(sf)
library(raster)
library(spdep)
t_blocks <- read.csv("tacoma_blocks2.csv")
t_tracts <- read.csv("tacoma_tracts2.csv")
t_od <- read.csv("od2015_Tacoma.csv")
t_od$h_geocode <- substr(as.character(t_od$h_geocode),
start = 1,
stop = nchar(as.character(t_od$h_geocode)) - 4)
t_rac <- read.csv("rac2015_Tacoma.csv")
t_wac <- read.csv("wac2015_Tacoma.csv")
t_blocks$h_geocode <- t_blocks$GEOID10
t_blocks$h_geocode <- substr(as.character(t_blocks$h_geocode),
start = 1,
stop = nchar(as.character(t_blocks$h_geocode)) - 4)
t_tracts$h_geocode <- t_tracts$GEOID.1
t_rac$h_geocode <- t_rac$ht
t_rac$h_geocode <- substr(as.character(t_rac$h_geocode),
start = 1,
stop = nchar(as.character(t_rac$h_geocode)) - 4)
residental_blocks <- merge(t_blocks, t_rac, by = "h_geocode")
od_blocks <- merge(t_blocks, t_od, by = "h_geocode")
od_tracts <- merge(t_tracts, t_od, by = "h_geocode")
moransI <- moran.test(odblocks)
```
moransI <- moran.test(od_blocks$SE03)
moransI <- moran.test(od_blocks$SE03, lw)
knitr::opts_chunk$set(echo = FALSE)
library(tmap)
library(dplyr)
library(tidyverse)
library(sf)
library(sp)
library(raster)
library(rgdal)
library(rgeos)
library(maptools)
#library(ggplot2)
ODDATA <- read.csv("od2015_Tacoma.csv")
WACT <- read.csv("wac2015_Tacoma.csv")
WACB <- read.csv("wac2015_Tacoma_Block.csv")
tacomablockshp <- st_read("tacomablocks-polygon.shp")
tacomatractshp <- st_read("tacoma_tract.shp")
#tacoma <- interaction(tacomatractshp, tacomablockshp)
#WACB$GEOID10 <-  WACB$w_geocode
#WACBLOCK <- merge(tacomablockshp, WACB, by=c("GEOID10"))
tacomablockshp$GEOIDnum <- nchar(as.character(tacomablockshp$GEOID10))
tacomablockshp$wt = substr(tacomablockshp$GEOID10, 1, -4)
WACT$GEOID10 <- WACT$wt
TACTRACT <- merge(tacomablockshp, WACT, by=c("GEOID10"))
tm_shape(TACTRACT) + tm_fill(col = )
knitr::opts_chunk$set(echo = FALSE)
# Static choropleth maps on the number of jobs in manufacturing, transportion and warehousing,
# and healthcare in Tacoma. They are to to plotted in the last code chunk.
tmap_mode("plot")
knitr::opts_chunk$set(echo = FALSE)
# Accessing all the libraries needed, and reading the shapefile and csv file.
library(sf)
library(tmap)
library(tidyverse)
library(tmaptools)
wac_2015 <- read.csv("wa_wac_S000_JT00_2015.csv")
tacoma_blocks_shp <- st_read("tacomablocks-polygon.shp")
# Extracting data only from these columns listed from wac_2015 into a new dataframe.
column_data <- select(wac_2015, w_geocode, CNS05, CNS06, CNS16, CD01, CD04)
# Remove the last 4 digits of the w_geocode.
column_data$w_geocode[which(length(column_data$w_geocode) == 14)] <- paste0("0",
column_data$w_geocode[which(length(column_data$w_geocode)                                                                     == 4)])
# Create a new column "GEOID10" for the new dataframe for merging it to the shapefile (tacoma_blocks_shp).
column_data$GEOID10 = column_data$w_geocode
# Merge the new dataframe with the shapefile (tacoma_blocks_shp) by the "GEOID10" column.
wac_blocks <- merge(tacoma_blocks_shp, column_data, by = c("GEOID10"))
# Static choropleth maps on the number of jobs in manufacturing, transportion and warehousing,
# and healthcare in Tacoma. They are to to plotted in the last code chunk.
tmap_mode("plot")
manufacturing <- tm_shape(wac_blocks) + tm_fill(col = "CNS05", title = "Number of Jobs") + tm_borders() + tm_layout(title = "All Manufacturing Jobs in Tacoma", title.position = c("LEFT", "TOP")) + tm_layout(aes.palette = list(seq = "YlGnBu"))
transportation <- tm_shape(wac_blocks) + tm_fill(col = "CNS06", title = "Number of Jobs") + tm_borders() + tm_layout(title = "All Transportation and Warehousing Jobs in Tacoma", title.position = c("RIGHT", "TOP")) + tm_layout(aes.palette = list(seq = "RdPu"))
healthcare <- tm_shape(wac_blocks) + tm_fill(col = "CNS16", title = "Number of Jobs") + tm_borders() + tm_layout(title = "All Health Care and Social Assistance Jobs in Tacoma", title.position = c("RIGHT", "TOP")) + tm_layout(aes.palette = list(seq = "YlGn"))
manufacturing
transportation
healthcare
#Interative cholopleth maps on jobs with employees with a bachelor's degree or higher and those with lower than a
# high school education in Tacoma
tmap_mode("view")
tm_shape(wac_blocks) + tm_fill("CD01", title = "Number of Jobs") + tm_borders() +
tm_layout(aes.palette = list(seq = "-RdYlGn"))
tm_shape(wac_blocks) + tm_fill("CD04", title = "Number of Jobs") + tm_borders() +
tm_layout(aes.palette = list(seq = "YlOrBr"))
manufacturing <- tm_shape(wac_blocks) + tm_fill(col = "CNS05", title = "Number of Jobs") + tm_layout(title = "All Manufacturing Jobs in Tacoma", title.position = c("LEFT", "TOP")) + tm_layout(aes.palette = list(seq = "YlGnBu")) + tm_borders()
setwd("~/Geog458new/Lab3/Group-Lab-3-Urban-Change")
library(sf)
library(sf)
sh <- st_read("saep_bg10.shp")
